# -*- mode: ruby -*-
# # vi: set ft=ruby :

Vagrant.require_version ">= 1.9.0"

$fqdn = "vm.local"
# Masters
$master_instances = 1
$master_memory = 4096
$master_cpus = 2
$master_executioncap = 75 # Max host cpu used by any vm
$master_name_prefix = "okd-master"
# Defaults for config options defined in CONFIG
$worker_instances = 3
$worker_memory = 4096
$worker_cpus = 2
$worker_executioncap = 75 # Max host cpu used by any vm
$worker_name_prefix = "okd-worker"

$share_folder = false # Require vagrant-vbguest plugin
$update_etc_hostname = true # Must be enbaled for openshift - Require vagrant-hostmanager plugin
$vm_gui = false

Vagrant.configure("2") do |config|
  # always use Vagrants insecure key
  config.ssh.insert_key = false

  config.vm.box = "centos/7"

  # Type: virtualbox share data
  # Require a plugin: https://github.com/dotless-de/vagrant-vbguest
  # See https://github.com/mitchellh/vagrant/issues/7157
  if $share_folder == true
    # Enable vbguest auto update - require a plugin
    config.vbguest.auto_update = true
    config.vm.share_folder ".", "/vagrant", type: "virtualbox"
  else
    # Do not upgrade vbox guest package
    config.vbguest.auto_update = false
    # disbale default shared folder
    config.vm.synced_folder ".", "/vagrant", disabled: true
  end

  # Require plugin: vagrant-hostmanager
  # configure the host's /etc/hosts with vm names
  if $update_etc_hostname == true
    config.hostmanager.enabled = true
    config.hostmanager.manage_host = true
  else 
    config.hostmanager.enabled = false
    config.hostmanager.manage_host = false
  end

  # Configure master virtual machines
  (1..$master_instances).each do |i|
    config.vm.define vm_name = "%s-%02d.%s" % [$master_name_prefix, i, $fqdn] do |config_vm|
      config_vm.vm.hostname = vm_name
      config_vm.vm.provider :virtualbox do |vb|
        vb.gui = $vm_gui
        vb.memory = $master_memory
        vb.cpus = $master_cpus
        if $master_executioncap < 100
          vb.customize ["modifyvm", :id, "--cpuexecutioncap", $master_executioncap]
        end
      end
      ip = "192.168.50.#{i+100}"
      config_vm.vm.network :private_network, ip: ip
      # Ansible Provisioning
      # Inventory file is .vagrant/provisioners/ansible/inventory/vagrant_ansible_inventory
      config_vm.vm.provision :ansible do |ansible|
        ansible.playbook = "ansible/master.yml"
        ansible.compatibility_mode="2.0"
      end
    end
  end
  # Configure worker virtual machines
  (1..$worker_instances).each do |i|
    config.vm.define vm_name = "%s-%02d.%s" % [$worker_name_prefix, i, $fqdn] do |config_vm|
      config_vm.vm.hostname = vm_name
      config_vm.vm.provider :virtualbox do |vb|
        vb.gui = $vm_gui
        vb.memory = $worker_memory
        vb.cpus = $worker_cpus
        if $worker_executioncap < 100
          vb.customize ["modifyvm", :id, "--cpuexecutioncap", $worker_executioncap]
        end
      end
      ip = "192.168.50.#{i+150}"
      config_vm.vm.network :private_network, ip: ip
    end
  end
  # Common provisioner
  config.vm.provision :ansible do |ansible|
    ansible.playbook = "ansible/prepare-nodes.yml"
    ansible.compatibility_mode="2.0"
  end


end