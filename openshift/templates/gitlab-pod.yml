apiVersion: v1
kind: List
metadata:
  name: gitlab

items:
  
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: gitlab-user
    labels:
      name: gitlab-user
      rndid: gitlab

- apiVersion: v1
  kind: Pod
  metadata:
    name: gitlab-server
    labels:
      name: gitlab-server
      rndid: gitlab
  spec:
    containers:
      - name: gitlab-server
        image: docker.io/gitlab/gitlab-ce:latest
        serviceAccount: gitlab-user
        env:
        - name: GITLAB_OMNIBUS_CONFIG
          value: "hostname='gitlab.192.168.50.101.nip.io'; external_url 'http://gitlab.192.168.50.101.nip.io'; gitlab_rails['lfs_enabled'] = false; prometheus_monitoring['enable'] = false;"
        # command: ["/bin/sh"]
        # args: ["-c", "while true; do msg=\"$(date) hello\" && echo $msg && echo $msg >> /mnt/nfsvol/test.log; sleep 10;done"]    
        ports:
          - name: http
            containerPort: 80
          - name: https
            containerPort: 443
          - name: ssh
            containerPort: 22
        # resources:
        #   limits:
        #     cpu: 750m
        #   requests:
        #     cpu: 750m

- kind: Service
  apiVersion: v1
  metadata:
    name: gitlab-service
    labels:
      name: gitlab-service
  spec:
    ports:
    - name: 22-ssh
      protocol: TCP
      port: 22
      targetPort: 22
    - name: 80-http
      protocol: TCP
      port: 80
      targetPort: 80
    selector:
      name: gitlab-server
    type: ClusterIP
    sessionAffinity: None
- apiVersion: v1
  kind: Route
  metadata:
    name: gitlab-route
    labels:
      name: gitlab-route
      rndid: gitlab
  spec:
    host: gitlab.192.168.50.101.nip.io
    to:
      kind: Service
      name: gitlab-service
    port:
      targetPort: 80-http

#       "spec": {
#         "host": "${APPLICATION_HOSTNAME}",
#         "to": {
#           "kind": "Service",
#           "name": "${APPLICATION_NAME}"
#         },
#         "port": {
#           "targetPort": "80-http"
#         }
