apiVersion: v1
kind: Template
metadata:
  name: gitlab-template
labels:
  createdBy: gitlab-template
parameters:
- name: APPLICATION_HOSTNAME
  description: Hostname for service routes
  value: gitlab.127.0.0.1.nip.io
- name: GITLAB_ROOT_PASSWORD
  description: Password for the GitLab 'root' user
  value: password
- name: SERVICE_ACCOUNT
  description: k8s service account
  value: gitlab
objects:  
# - apiVersion: v1
#   kind: ServiceAccount
#   metadata:
#     name: gitlab-user
#     labels:
#       name: gitlab-user
#       rndid: gitlab

- apiVersion: v1
  kind: Pod
  metadata:
    name: gitlab-server
    labels:
      name: gitlab-server
      rndid: gitlab
  spec:
    containers:
      - name: gitlab-server
        image: docker.io/gitlab/gitlab-ce:11.0.1-ce.0
        serviceAccount: "${SERVICE_ACCOUNT}"
        env:
        - name: GITLAB_OMNIBUS_CONFIG
          value: "hostname='gitlab-service.gitlab.svc'; external_url \"http://${APPLICATION_HOSTNAME}/\" unless hostname.to_s == '';  gitlab_rails['initial_root_password']=\"${GITLAB_ROOT_PASSWORD}\"; prometheus_monitoring['enable'] = false;"
        # command: ["/bin/sh"]
        # args: ["-c", "while true; do msg=\"$(date) hello\" && echo $msg && echo $msg >> /mnt/nfsvol/test.log; sleep 10;done"]    
        ports:
          - name: http
            containerPort: 80
          - name: https
            containerPort: 443
          - name: ssh
            containerPort: 22
        # resources:
        #   limits:
        #     cpu: 750m
        #   requests:
        #     cpu: 750m

- kind: Service
  apiVersion: v1
  metadata:
    name: gitlab-service
    labels:
      name: gitlab-service
  spec:
    ports:
    - name: 22-ssh
      protocol: TCP
      port: 22
      targetPort: 22
    - name: 80-http
      protocol: TCP
      port: 80
      targetPort: 80
    selector:
      name: gitlab-server
    type: ClusterIP
    sessionAffinity: None
- apiVersion: v1
  kind: Route
  metadata:
    name: gitlab-route
    labels:
      name: gitlab-route
      rndid: gitlab
  spec:
    host: "${APPLICATION_HOSTNAME}"
    to:
      kind: Service
      name: gitlab-service
    port:
      targetPort: 80-http

